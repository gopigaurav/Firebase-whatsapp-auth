{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","SidebarChat.js","Sidebar.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","input","setInput","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","sendMessage","e","a","preventDefault","add","message","displayName","timestamp","FieldValue","serverTimestamp","console","log","className","Avatar","src","Date","length","toDate","toUTCString","IconButton","SearchOutlined","AttachFile","MoreVert","onChange","target","placeholder","type","onClick","SidebarChat","addNewChat","id","seed","setSeed","Math","floor","random","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","room","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.265aba23.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBx9EkRXW2JIh0DpW0TjxCyTDBhE0cqjYs\",\r\n    authDomain: \"whatsapp-clone-49aaf.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-49aaf\",\r\n    storageBucket: \"whatsapp-clone-49aaf.appspot.com\",\r\n    messagingSenderId: \"662152507017\",\r\n    appId: \"1:662152507017:web:ece390635501b9e8d56058\",\r\n    measurementId: \"G-S8TN6KXEJL\"\r\n  };\r\n// auth by google\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth,provider};\r\n  export default db;","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {MoreVert} from '@material-ui/icons';\r\nimport './Chat.css';\r\nimport { AttachFile, SearchOutlined } from '@material-ui/icons';\r\nimport InsertEmotionIcon from \"@material-ui/icons/InsertEmoticon\"\r\nimport MicIcon from \"@material-ui/icons/Mic\"\r\nimport {useParams} from \"react-router-dom\";\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase'\r\n\r\n {/*  \r\n    const [input,setInput] = useState([])\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await axios.post('/messages/new', {\r\n            message:input,\r\n            name: \"gopi\",\r\n            timestamp   : \"Real Time | Thanks CP\",\r\n            received : true\r\n        })\r\n\r\n        setInput('');\r\n    }\r\n*/}\r\n\r\n\r\n\r\n//(message.timestamp?.toDate())\r\nfunction Chat() { \r\n\r\n    const [input ,setInput] = useState([]);\r\n    const {roomId} = useParams();\r\n    const[roomName,setRoomName] = useState(\"\");\r\n    const[messages, setMessages] = useState([]);\r\n    const [{user} ,dispatch] = useStateValue();\r\n    \r\n\r\n    useEffect(() => {\r\n      if (roomId){\r\n          db.collection('rooms').doc(roomId)\r\n          .onSnapshot((snapshot) => \r\n              setRoomName(snapshot.data().name)\r\n          )\r\n          db.collection('rooms').doc(roomId)\r\n          .collection('messages').orderBy('timestamp','asc')\r\n          .onSnapshot((snapshot)=>\r\n          setMessages(snapshot.docs.map((doc)=>\r\n          doc.data()))\r\n          )\r\n      }\r\n    }, [roomId]);\r\n\r\n\r\n \r\n    const sendMessage = async(e) =>{\r\n        e.preventDefault();\r\n        \r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message:input,\r\n            name:user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        console.log(setInput);\r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src=\"https://c4.wallpaperflare.com/wallpaper/756/185/281/women-model-long-hair-brunette-wallpaper-preview.jpg\" />\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>last seen{\" \"} \r\n                        {\r\n                        new Date(\r\n                            messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()\r\n                        \r\n                        }</p>\r\n                </div>\r\n                <div className=\"chat__headerRight\"> \r\n                <IconButton>\r\n                    <SearchOutlined/>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <AttachFile/>\r\n                </IconButton>\r\n                <IconButton>\r\n                     <MoreVert/>\r\n                </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n            <p className=\"chat__message\">\r\n                <span className=\"chat__name\">\r\n                    gopi\r\n                </span>\r\n                Fullstack whatsapp-Clone with Firestore | Yesss\r\n\r\n                <span className=\"chat__timestamp\">\r\n                    {new Date().toUTCString()}\r\n                </span>\r\n                </p>\r\n\r\n\r\n                {messages.map((message) => (\r\n                    <p className={`chat__message ${true && \"chat__receiver\"}`}>\r\n                    <span className=\"chat__name\">\r\n                        {message.name}\r\n                    </span>\r\n                    {message.message}\r\n                    <span className=\"chat__timestamp\">\r\n                        {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                    </p>\r\n                ))}\r\n\r\n\r\n             \r\n            </div>\r\n            <div className =\"chat__footer\">\r\n                <InsertEmotionIcon/>\r\n                <form>\r\n                    <input value = {input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message\"\r\n                    type=\"text\"/>\r\n                    <button  onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                </form>\r\n                <MicIcon/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import { Avatar } from '@material-ui/core';\r\nimport React, {useState, useEffect} from 'react';\r\nimport './SidebarChat.css';\r\nimport db from \"./firebase\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n// to get a random avatar\r\n\r\nfunction SidebarChat({addNewChat, id, name}) {\r\n\r\n    const[seed, setSeed] = useState('');\r\n    const[messages,setMessages] = useState(\"\");\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(true ){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc')\r\n            .onSnapshot((snapshot)=>(\r\n                setMessages(snapshot.docs.map((doc)=>\r\n                doc.data))      \r\n            ))\r\n        }\r\n    },[id])\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please enter name for chat\");\r\n        if (roomName){\r\n            //database stuff\r\n            db.collection('rooms').add({\r\n                name:roomName,\r\n            })\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to= {`/rooms/${id}`}>\r\n              <div className=\"sidebarChat\">\r\n            <Avatar src= {`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n        <div className=\"sidebarChat__info\">\r\n            <h2>{name}</h2>\r\n    <p>{/*{messages[0]?.message}*/}\r\n    Last Seen ...\r\n           </p>\r\n        </div>\r\n            \r\n        </div>\r\n        </Link>\r\n    ) : (\r\n        <div onClick={createChat}\r\n        className=\"sidebarChat\">\r\n            <h2>Add new Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, {useState, useEffect} from 'react';\r\nimport './Sidebar.css';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport {Avatar,IconButton} from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SearchOutlined } from '@material-ui/icons'\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [{user}, dispatch]=useStateValue();\r\n    const [rooms, setRooms] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').onSnapshot((snapshot)=>{\r\n            setRooms(snapshot.docs.map((doc)=>({\r\n                id: doc.id,\r\n                data:doc.data(),\r\n            })\r\n            ))\r\n            return () => {\r\n                unsubscribe();\r\n            }\r\n        }\r\n        )\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={user?.photoURL}/>\r\n                <h1>gopi</h1>\r\n                <div className=\"sidebar__headerRight\">\r\n                <IconButton>\r\n                <DonutLargeIcon/>\r\n                </IconButton>\r\n                <IconButton>\r\n                <ChatIcon/>\r\n                </IconButton>\r\n                <IconButton>\r\n                <MoreVertIcon/>\r\n                </IconButton>\r\n                \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"Search or start new chat\" type = \"text\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat />\r\n                {rooms.map((room)=>(\r\n                    <SidebarChat key={room.id} id = {room.id}\r\n                    name={room.data.name}/>\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export const initialState = {\r\n    user:null,\r\n}\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n      case actionTypes.SET_USER:\r\n        return {\r\n          ...state,\r\n          user: action.user,\r\n        };\r\n  \r\n      default:\r\n          return  state;\r\n    }\r\n    };\r\n\r\n    export default reducer","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Login.css';\r\nimport {auth, provider} from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\nfunction Login() {\r\n    const [{} , dispatch] = useStateValue()\r\n// authentication\r\n\r\n    const signIn= () =>{\r\n        auth.signInWithPopup(provider).then((result) => \r\n            {\r\n                dispatch({\r\n                    type:actionTypes.SET_USER,\r\n                    user:result.user,\r\n                })\r\n            }).catch((error) => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className = \"login\">\r\n            <div className=\"login__container\">\r\n             <img className=\"login__containerImage\"\r\n             src=\"https://p7.hiclipart.com/preview/922/489/218/whatsapp-icon-logo-whatsapp-logo-png.jpg\"\r\n             alt=\"whatsapp-logo\"\r\n             />\r\n            <div className=\"login__text\">\r\n                <h1>Sign in to WhatsApp</h1>\r\n            </div>\r\n            <Button onClick={signIn}>\r\n                Sign in with Google\r\n            </Button>\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import './App.css';\nimport React from 'react';\nimport './App.css';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport Login from './Login';\nimport {BrowserRouter as Router, Switch,Route, Link} from \"react-router-dom\";\nimport { useStateValue } from './StateProvider';\n\n\nfunction App() {\n  const [{user}, dispatch] = useStateValue();\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login/>\n      ):(\n        <div className=\"app__body\">\n        <Router>\n        <Sidebar/>\n          <Switch>\n              <Route path = \"/rooms/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat/>\n              </Route> \n  \n            </Switch>\n        </Router>\n        </div>\n      )}   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer , {initialState} from \"./reducer\"\nimport {StateProvider} from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState = {initialState} reducer={reducer}>\n        <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}